! How To II - More tips to new players who might not be familiar with standard IF conventions

! We'll show a tooltip on the prompt to direct the player to use the keyboard, hint about what kind of commands to use if the first command they try is an error and direct their attention to parts of items.


Constant Story "How To II^";

                          Include "vorple.h";
Include "parser";

Global VorpleParserError = 0;		! do we need a tooltip on the prompt

! a stub that is called when there is a parser error
[ ParserError ;
	VorpleParserError = 1;
	return 0;  ! needed for processing to continue
];

Global beforefirstcommand = 1;
! AfterPrompt is a I6 lib that gets called right after the prompt is displayed; put your
!    prompt tooltips there!
[ AfterPrompt ;
	if (beforefirstcommand) { beforefirstcommand = 0; VorpleTooltipPrompt("Type a command to play."); }
	if (VorpleParserError == 1) {
		VorpleTooltipPrompt("Try to for example EXAMINE things you see or take INVENTORY.");
		VorpleParserError=0;
	}
];

Include "verblib";
                          Include "vorple-tooltips.h";
Include "grammar";


[ Initialise ;
	location = bedroom;
	VorpleInitialise();
];


Object bedroom "Bedroom"
	with description [; "This is a bedroom"; ! should the tip on the prompt come here?
		],
	before [; Examine: if (self hasnt open) {
				print "The wardrobe is ";
				VorplePlaceElement(0, "wardrobe-closed", "closed");
				print ".";
				VorpleTooltipElement("You can OPEN WARDROBE to see what's inside.", "wardrobe-closed", 2); ! 2 seconds
				""; } else {<<Examine self>>;}
			return true;
		],
has light ;

Object wardrobe "wardrobe" bedroom
	with name 'wardrobe',
has static openable container;

Object jacket wardrobe
	with name 'jacket',
	short_name [; if (self in wardrobe) {
				VorplePlaceElement(0, "jacket-text", "jacket");
				VorpleTooltipElement("The jacket is something you can TAKE or WEAR.", "jacket-text", 2); ! 2 seconds
			}
			else { print "jacket"; }
			return true;
	],
has clothing ;
